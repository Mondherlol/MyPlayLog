{"version":3,"file":"static/js/427.e77ab941.chunk.js","mappings":"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","sources":["components/ListComponents/AddingGameModal/AddingGameFilter.jsx","components/ListComponents/AddingGameModal/PopUpConfirm.jsx","components/ListComponents/AddingGameModal/AddingGameModal.jsx","components/ListComponents/CreateListModal/inputTags.jsx","components/ListComponents/CreateListModal/CreateListModal.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { ConfigProvider, Input, Radio, Space } from 'antd'\r\nimport colors from '../../../utils/style/colors'\r\nconst { Search } = Input\r\n\r\nexport default function AddingGameFilter({ lists, setFilteredLists }) {\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [filter, setFilter] = useState('all')\r\n  const handleSearch = (event) => {\r\n    setSearchTerm(event.target.value)\r\n  }\r\n  useEffect(() => {\r\n    const filteredList = lists.filter((list) => {\r\n      const name = list.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n      const rank =\r\n        filter === 'all'\r\n          ? true\r\n          : filter === 'ranked'\r\n          ? list.ranked\r\n          : !list.ranked\r\n      return name && rank\r\n    })\r\n    setFilteredLists(filteredList)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [searchTerm, filter])\r\n\r\n  return (\r\n    <div className=\"flex flex-col gap-2\">\r\n      <ConfigProvider\r\n        theme={{\r\n          token: {\r\n            colorTextPlaceholder: 'grey',\r\n          },\r\n        }}\r\n      >\r\n        <Search\r\n          id=\"search\"\r\n          type=\"text\"\r\n          placeholder=\"Chercher une liste ou un top...\"\r\n          value={searchTerm}\r\n          onChange={handleSearch}\r\n          // onSearch={handleSubmit}\r\n          allowClear\r\n          size=\"large\"\r\n        />\r\n      </ConfigProvider>\r\n      <div className=\"flex flex-row\">\r\n        <ConfigProvider\r\n          theme={{\r\n            token: {\r\n              colorPrimary: colors.primary,\r\n              colorPrimaryHover: colors.primary,\r\n              colorText: 'white',\r\n              colorTextDisabled: 'grey',\r\n            },\r\n          }}\r\n        >\r\n          <Radio.Group\r\n            onChange={(e) => setFilter(e.target.value)}\r\n            value={filter}\r\n          >\r\n            <Space direction=\"horizontal\">\r\n              <Radio value=\"all\">Tous</Radio>\r\n              <Radio value=\"classic\">Classiques</Radio>\r\n              <Radio value=\"ranked\">Ranked</Radio>\r\n            </Space>\r\n          </Radio.Group>\r\n        </ConfigProvider>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { Modal } from 'antd'\r\nimport colors from '../../../utils/style/colors'\r\nimport { useState, useEffect } from 'react'\r\n\r\nconst PopUpConfirm = ({\r\n  isConfirmCloseModalOpen,\r\n  setIsConfirmCloseModalOpen,\r\n  setIsModalOpen,\r\n}) => {\r\n  const [closed, setClosed] = useState(false)\r\n  function closeModal() {\r\n    setIsConfirmCloseModalOpen(false)\r\n    setIsModalOpen(false)\r\n    setClosed(true)\r\n  }\r\n  useEffect(() => {\r\n    if (!isConfirmCloseModalOpen) setClosed(true)\r\n    else setClosed(false)\r\n  }, [isConfirmCloseModalOpen])\r\n\r\n  return (\r\n    <Modal\r\n      title=\"Close without saving ?\"\r\n      open={isConfirmCloseModalOpen && !closed}\r\n      onCancel={() => setIsConfirmCloseModalOpen(false)}\r\n      onOk={closeModal}\r\n      okText=\"Yes\"\r\n      okType=\"danger\"\r\n      okButtonProps={{\r\n        style: {\r\n          background: colors.danger,\r\n          borderColor: colors.danger,\r\n          color: 'white',\r\n        },\r\n      }}\r\n      cancelText=\"No\"\r\n    ></Modal>\r\n  )\r\n}\r\n\r\nexport default PopUpConfirm\r\n","import { Modal } from 'antd'\r\nimport { useState, useEffect, useContext } from 'react'\r\nimport { Checkbox } from 'antd'\r\nimport LoadingBar from 'react-top-loading-bar'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport { LoginData } from '../../../Helper/Context'\r\nimport colors from '../../../utils/style/colors'\r\nimport CreateListModal from '../CreateListModal/CreateListModal'\r\nimport './AddingGame.css'\r\n\r\nimport AddingGameFilter from './AddingGameFilter'\r\nimport PopUpConfirm from './PopUpConfirm'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nexport default function AddingGameModal({\r\n  isModalOpen,\r\n  setIsModalOpen,\r\n  gameId,\r\n}) {\r\n  const [lists, setLists] = useState([])\r\n  const [filteredLists, setFilteredLists] = useState([])\r\n  const [listsIds, setListsIds] = useState([])\r\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false)\r\n  const [isConfirmCloseModalOpen, setIsConfirmCloseModalOpen] = useState(false)\r\n  const { loginData } = useContext(LoginData)\r\n  const { t } = useTranslation()\r\n  const navigate = useNavigate()\r\n\r\n  const [progress, setProgress] = useState(0)\r\n  const [idListForRemoveGame, setIdListForRemoveGame] = useState([])\r\n  const [listCreated, setListCreated] = useState(null)\r\n\r\n  useEffect(() => {\r\n    if (isModalOpen) {\r\n      if (loginData) {\r\n        setProgress(5)\r\n        getLists()\r\n        setListsIds([])\r\n        setIdListForRemoveGame([])\r\n      } else {\r\n        navigate('/login')\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isModalOpen])\r\n\r\n  const getLists = () => {\r\n    setProgress(10)\r\n    axios\r\n      .get(`${process.env.REACT_APP_IP_ADRESS}/api/lists/withGame/${gameId}`, {\r\n        withCredentials: true,\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data)\r\n        setLists(res.data.lists)\r\n        setFilteredLists(res.data.lists)\r\n        res.data.lists.forEach((list) => {\r\n          list.games.length !== 0 &&\r\n            setListsIds((prevIds) => [...prevIds, list._id])\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n      .finally(() => setProgress(100))\r\n  }\r\n\r\n  const handleCheckboxChange = (event, listId) => {\r\n    if (event.target.checked) {\r\n      //If CHecked add game to listId\r\n      setListsIds((prevIds) => [...prevIds, listId])\r\n      setIdListForRemoveGame((prevIds) => prevIds.filter((id) => id !== listId))\r\n    } else {\r\n      //Else remove\r\n      setListsIds((prevIds) => prevIds.filter((id) => id !== listId))\r\n      setIdListForRemoveGame((prevIds) => [...prevIds, listId])\r\n    }\r\n  }\r\n\r\n  const addToLists = () => {\r\n    setProgress(20)\r\n    const data = { id_IGDB: gameId.toString() }\r\n    const ids = listsIds.join(',')\r\n    if (ids !== undefined && ids !== '') {\r\n      const config = {\r\n        method: 'post',\r\n        withCredentials: true,\r\n        url: `${process.env.REACT_APP_IP_ADRESS}/api/lists/game?ids=${ids}`,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        data: { ...data },\r\n      }\r\n      axios(config)\r\n        .then((res) => {\r\n          toast.success(t('games_added_with_success'), {\r\n            position: toast.POSITION.BOTTOM_RIGHT,\r\n            theme: 'dark',\r\n            autoClose: 3000,\r\n          })\r\n        })\r\n        .catch((err) => {\r\n          console.log(err)\r\n          toast.error(err.message, {\r\n            position: toast.POSITION.BOTTOM_RIGHT,\r\n            theme: 'dark',\r\n            autoClose: 3000,\r\n          })\r\n        })\r\n        .finally(() => setProgress(100))\r\n    }\r\n  }\r\n  const removeFromLists = () => {\r\n    setProgress(80)\r\n\r\n    const idsToRemove = idListForRemoveGame\r\n      .filter((id) =>\r\n        lists.some((listItem) => {\r\n          return listItem._id === id && listItem.games.length !== 0\r\n        })\r\n      )\r\n      .join(',')\r\n\r\n    if (\r\n      idsToRemove !== undefined &&\r\n      idsToRemove !== '' &&\r\n      idsToRemove !== ','\r\n    ) {\r\n      const config = {\r\n        method: 'delete',\r\n        url: `${process.env.REACT_APP_IP_ADRESS}/api/lists/remove/${gameId}?listIds=${idsToRemove}`,\r\n        withCredentials: true,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n      axios(config)\r\n        .then((res) => {\r\n          toast.success(t('games_removed_with_success'), {\r\n            position: toast.POSITION.BOTTOM_RIGHT,\r\n            theme: 'dark',\r\n            autoClose: 3000,\r\n          })\r\n        })\r\n        .catch((err) => {\r\n          console.log(err)\r\n          toast.error(err.message, {\r\n            position: toast.POSITION.BOTTOM_RIGHT,\r\n            theme: 'dark',\r\n            autoClose: 3000,\r\n          })\r\n        })\r\n        .finally(() => setProgress(100))\r\n    }\r\n  }\r\n\r\n  const handleOk = () => {\r\n    setProgress(5)\r\n    addToLists()\r\n    removeFromLists()\r\n    setIsModalOpen(false)\r\n  }\r\n\r\n  //If nothing changed close otherwise close\r\n  const handleCancel = () => {\r\n    //Compare added Games\r\n    const idsToCompare = Object.values(lists)\r\n      // eslint-disable-next-line array-callback-return\r\n      .map((list) => {\r\n        if (list.games.length !== 0) return list._id\r\n      })\r\n      .filter((id) => id !== undefined)\r\n    const GamedAdded =\r\n      listsIds.length === idsToCompare.length &&\r\n      listsIds.every((id) => idsToCompare.includes(id))\r\n\r\n    const GameRemoved = idListForRemoveGame.filter((id) =>\r\n      lists.some((listItem) => {\r\n        return listItem._id === id && listItem.games.length !== 0\r\n      })\r\n    )\r\n    console.log(GameRemoved)\r\n\r\n    if (!GamedAdded || GameRemoved.length !== 0)\r\n      setIsConfirmCloseModalOpen(true)\r\n    else setIsModalOpen(false)\r\n  }\r\n\r\n  // Si l'utilisateur crée une liste on l'ajoute à ses listes\r\n  useEffect(() => {\r\n    if (listCreated !== null && !lists.includes(listCreated)) {\r\n      setLists((prevLists) => [listCreated, ...prevLists])\r\n      setFilteredLists((prevLists) => [listCreated, ...prevLists])\r\n      //Et on la coche\r\n      setListsIds((prevIds) => [...prevIds, listCreated._id])\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [listCreated])\r\n\r\n  return (\r\n    <Modal\r\n      title=\"Add game to lists\"\r\n      open={isModalOpen}\r\n      className=\"addingGameStyle\"\r\n      onCancel={handleCancel}\r\n      style={{ top: 20 }}\r\n      footer={[\r\n        <button\r\n          className=\"btn-delete-list p-2 mx-2 rounded-xl text-white border-none cursor-pointer\"\r\n          key=\"back\"\r\n          onClick={handleCancel}\r\n        >\r\n          CANCEL\r\n        </button>,\r\n        <button\r\n          className=\"btn-save-list p-2 mx-2 rounded-xl text-black border-none cursor-pointer\"\r\n          style={{ backgroundColor: colors.primary }}\r\n          key=\"submit\"\r\n          type=\"primary\"\r\n          onClick={handleOk}\r\n        >\r\n          ENREGISTRER\r\n        </button>,\r\n      ]}\r\n    >\r\n      <LoadingBar\r\n        color={colors.primary}\r\n        progress={progress}\r\n        onLoaderFinished={() => setProgress(0)}\r\n      />\r\n      <CreateListModal\r\n        isModalOpen={isCreateModalOpen}\r\n        setIsModalOpen={setIsCreateModalOpen}\r\n        setListCreated={setListCreated}\r\n      />\r\n      <PopUpConfirm\r\n        isConfirmCloseModalOpen={isConfirmCloseModalOpen}\r\n        setIsConfirmCloseModalOpen={setIsConfirmCloseModalOpen}\r\n        setIsModalOpen={setIsModalOpen}\r\n      />\r\n      <div className=\"flex flex-col gap-2\">\r\n        <AddingGameFilter\r\n          setLists={setLists}\r\n          lists={lists}\r\n          setFilteredLists={setFilteredLists}\r\n        />\r\n        <div className=\"flex flex-col  gap-2 h-96 overflow-y-scroll pr-5 scrollbar-thumb-yellow-500 scrollbar-thin scrollbar-rounded-[50px]  w-full \">\r\n          {filteredLists.length === 0 && (\r\n            <>\r\n              <h4>No list with that name...</h4>\r\n              <button\r\n                onClick={() => {\r\n                  setIsCreateModalOpen(true)\r\n                }}\r\n                style={{\r\n                  color: colors.backgroundDerivation,\r\n                  backgroundColor: colors.primary,\r\n                  fontWeight: 'extra-bold',\r\n                }}\r\n                className=\" text-white p-3 btn-save-list border-none hover:cursor-pointer \"\r\n              >\r\n                CREATE IT{' '}\r\n              </button>\r\n            </>\r\n          )}\r\n          {filteredLists.map((list) => {\r\n            return (\r\n              <div\r\n                className={` w-full   ${\r\n                  listsIds.includes(list._id)\r\n                    ? 'style-checked-list'\r\n                    : 'selectList'\r\n                }`}\r\n                key={list._id}\r\n              >\r\n                <Checkbox\r\n                  style={{\r\n                    padding: '8px',\r\n\r\n                    borderRadius: '4px',\r\n                    width: '100%',\r\n                    '--background-color': colors.primary,\r\n                    '--border-color': colors.primary,\r\n                    color: 'white',\r\n                    backgroundColor: 'rgb(8, 7, 27,0.5)',\r\n                    // backgroundColor: '#131226',\r\n                  }}\r\n                  onChange={(event) => handleCheckboxChange(event, list._id)}\r\n                  checked={listsIds.includes(list._id)}\r\n                >\r\n                  <h2 className=\" text-base \">\r\n                    {list.name}\r\n                    <span className=\"text-xs  font-normal\">\r\n                      {' '}\r\n                      {/* {list.public ? 'Private' : 'Public'}{' '} */}•{' '}\r\n                      {list.ranked ? ' Top' : 'Liste'}\r\n                    </span>\r\n                  </h2>\r\n                </Checkbox>\r\n              </div>\r\n            )\r\n          })}\r\n          {filteredLists.length !== 0 && (\r\n            <button\r\n              onClick={() => {\r\n                setIsCreateModalOpen(true)\r\n              }}\r\n              style={{\r\n                color: colors.backgroundDerivation,\r\n                backgroundColor: colors.primary,\r\n                fontWeight: 'extra-bold',\r\n              }}\r\n              className=\" text-white p-3 btn-save-list border-none hover:cursor-pointer \"\r\n            >\r\n              CREATE LIST{' '}\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n","import { useState } from 'react'\r\nimport './styles.scss'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nfunction InputTag({ tags, setTags }) {\r\n  const [inputValue, setInputValue] = useState('')\r\n  const { t } = useTranslation()\r\n\r\n  const handleInputChange = (event) => {\r\n    setInputValue(event.target.value)\r\n  }\r\n\r\n  const handleInputKeyDown = (event) => {\r\n    if (event.key === 'Enter' || event.key === ',') {\r\n      event.preventDefault()\r\n      addTag()\r\n    }\r\n  }\r\n\r\n  const addTag = () => {\r\n    const tagValue = inputValue.trim()\r\n\r\n    if (tagValue && !tags.includes(tagValue)) {\r\n      if (tags.find((tag) => tag.toLowerCase() === inputValue.toLowerCase())) {\r\n        inputValue('')\r\n        return\r\n      }\r\n      setTags([...tags, tagValue])\r\n      setInputValue('')\r\n    }\r\n  }\r\n\r\n  const removeTag = (e, tagIndex) => {\r\n    e.preventDefault()\r\n    const newTags = [...tags]\r\n    newTags.splice(tagIndex, 1)\r\n    setTags(newTags)\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-row \">\r\n      <div className=\"tags-container\">\r\n        {tags.map((tag, index) => (\r\n          <div className=\"tag\" key={index}>\r\n            <span className=\"tag__name\">{tag}</span>\r\n            <button\r\n              className=\"tag__remove\"\r\n              onClick={(e) => removeTag(e, index)}\r\n            >\r\n              &times;\r\n            </button>\r\n          </div>\r\n        ))}\r\n        <input\r\n          type=\"text\"\r\n          className=\"tag-input\"\r\n          placeholder={t('add_tag')}\r\n          value={inputValue}\r\n          maxLength={20}\r\n          onKeyDown={handleInputKeyDown}\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n      <button\r\n        className=\"bg-red-600 text-white border-none p-2 hover:bg-red-700 hover:cursor-pointer min-w-fit\"\r\n        onClick={(e) => {\r\n          e.preventDefault()\r\n          setTags([])\r\n        }}\r\n      >\r\n        {t('clear_tags')}\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InputTag\r\n","import { Modal, Radio, Input, Button } from 'antd'\r\nimport { useState } from 'react'\r\nimport axios from 'axios'\r\nimport TagInput from './inputTags'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { ConfigProvider } from 'antd'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport './CreateListModal.css'\r\nimport colors from '../../../utils/style/colors'\r\nconst { TextArea } = Input\r\n\r\nexport default function CreateListModal({\r\n  isModalOpen,\r\n  setIsModalOpen,\r\n  redirectEdit = false,\r\n  setListCreated = null,\r\n}) {\r\n  const [name, setName] = useState('')\r\n  const [isPublic, setIsPublic] = useState(false)\r\n  const [isRanked, setIsRanked] = useState(false)\r\n  const [description, setDescription] = useState('')\r\n  const [tags, setTags] = useState([])\r\n  const { t } = useTranslation()\r\n  const navigate = useNavigate()\r\n\r\n  const handleCreate = () => {\r\n    const newList = JSON.stringify({\r\n      name: name,\r\n      idOwner: 'Mondher',\r\n      public: isPublic,\r\n      ranked: isRanked,\r\n      description: description,\r\n      tags: tags.map((tag) => ({ tag: tag })),\r\n    })\r\n\r\n    var config = {\r\n      method: 'post',\r\n      withCredentials: true,\r\n      url: `${process.env.REACT_APP_IP_ADRESS}/api/lists/`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      data: newList,\r\n    }\r\n    axios(config)\r\n      .then((res) => {\r\n        !redirectEdit &&\r\n          toast.success('List created with success', {\r\n            position: toast.POSITION.BOTTOM_RIGHT,\r\n            theme: 'dark',\r\n            autoClose: 1000,\r\n          })\r\n        redirectEdit && redirectToEdit(res.data.listCreated._id)\r\n        setListCreated !== null && setListCreated(res.data.listCreated)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n        toast.error(err.message, {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          theme: 'dark',\r\n        })\r\n      })\r\n      .finally(() => setIsModalOpen(false))\r\n  }\r\n\r\n  const redirectToEdit = (listId) => {\r\n    navigate(`/list/${listId}/edit`)\r\n  }\r\n  const handleCancel = () => {\r\n    setIsModalOpen(false)\r\n  }\r\n  const onNameChange = (e) => {\r\n    setName(e.target.value)\r\n  }\r\n  const onPublicChange = (e) => {\r\n    setIsPublic(e.target.value === 'public')\r\n  }\r\n  const onRankedChange = (e) => {\r\n    setIsRanked(e.target.value === 'ranked')\r\n  }\r\n  const onDescriptionChange = (e) => {\r\n    setDescription(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={t('create_new_list')}\r\n      open={isModalOpen}\r\n      onCancel={handleCancel}\r\n      style={{ minWidth: '300px' }}\r\n      className=\"createListStyle\"\r\n      footer={[\r\n        <button\r\n          className=\"btn-delete-list p-2 mx-2 rounded-xl text-white border-none cursor-pointer\"\r\n          key=\"back\"\r\n          onClick={handleCancel}\r\n        >\r\n          {t('cancel')}\r\n        </button>,\r\n        <button\r\n          className=\"btn-save-list p-2 mx-2 rounded-xl text-black border-none cursor-pointer\"\r\n          style={{ backgroundColor: colors.primary }}\r\n          key=\"submit\"\r\n          type=\"primary\"\r\n          onClick={handleCreate}\r\n        >\r\n          {t('create')}\r\n        </button>,\r\n      ]}\r\n    >\r\n      <div>\r\n        <form className=\"flex flex-col gap-2\">\r\n          <label>{t('name_your_list')}</label>\r\n          <ConfigProvider\r\n            theme={{\r\n              token: {\r\n                fontWeightStrong: 800,\r\n                colorText: 'white',\r\n                colorBgBase: colors.backgroundDerivation,\r\n                colorBorder: 'white',\r\n\r\n                colorPrimary: colors.primary,\r\n                colorTextPlaceholder: 'grey',\r\n                fontFamily: 'Inter',\r\n              },\r\n            }}\r\n          >\r\n            <Input\r\n              showCount\r\n              maxLength={100}\r\n              placeholder={`${t('best_fighting_games')}...`}\r\n              value={name}\r\n              onChange={onNameChange}\r\n            />\r\n\r\n            <div className=\"flex flex-row justify-between gap-10\">\r\n              <div className=\"flex flex-col\">\r\n                <label>{t('visibility')}</label>\r\n                <Radio.Group\r\n                  defaultValue=\"private\"\r\n                  buttonStyle=\"solid\"\r\n                  onChange={onPublicChange}\r\n                >\r\n                  <Radio.Button\r\n                    style={{ color: isPublic ? 'black' : 'white' }}\r\n                    value=\"public\"\r\n                  >\r\n                    {t('public')}\r\n                  </Radio.Button>\r\n                  <Radio.Button\r\n                    style={{ color: !isPublic ? 'black' : 'white' }}\r\n                    value=\"private\"\r\n                  >\r\n                    {t('private')}\r\n                  </Radio.Button>\r\n                </Radio.Group>\r\n              </div>\r\n\r\n              <div className=\"flex flex-col\">\r\n                <label>{t('type')}</label>\r\n                <Radio.Group\r\n                  defaultValue=\"classic\"\r\n                  buttonStyle=\"solid\"\r\n                  onChange={onRankedChange}\r\n                >\r\n                  <Radio.Button\r\n                    style={{ color: !isRanked ? 'black' : 'white' }}\r\n                    value=\"classic\"\r\n                  >\r\n                    {t('classic')}\r\n                  </Radio.Button>\r\n                  <Radio.Button\r\n                    value=\"ranked\"\r\n                    style={{ color: isRanked ? 'black' : 'white' }}\r\n                  >\r\n                    {t('top')}\r\n                  </Radio.Button>\r\n                </Radio.Group>\r\n              </div>\r\n            </div>\r\n\r\n            <TextArea\r\n              className=\"mb-4\"\r\n              placeholder={`${t('describe_your_list_in_some_words')}...`}\r\n              showCount\r\n              maxLength={300}\r\n              value={description}\r\n              onChange={onDescriptionChange}\r\n            />\r\n            <TagInput tags={tags} setTags={setTags} />\r\n          </ConfigProvider>\r\n        </form>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n"],"names":["Search","Input","AddingGameFilter","lists","setFilteredLists","useState","searchTerm","setSearchTerm","filter","setFilter","useEffect","filteredList","list","name","toLowerCase","includes","rank","ranked","className","theme","token","colorTextPlaceholder","id","type","placeholder","value","onChange","event","target","allowClear","size","colorPrimary","colors","colorPrimaryHover","colorText","colorTextDisabled","e","direction","isConfirmCloseModalOpen","setIsConfirmCloseModalOpen","setIsModalOpen","closed","setClosed","title","open","onCancel","onOk","okText","okType","okButtonProps","style","background","borderColor","color","cancelText","AddingGameModal","isModalOpen","gameId","setLists","filteredLists","listsIds","setListsIds","isCreateModalOpen","setIsCreateModalOpen","loginData","useContext","LoginData","t","useTranslation","navigate","useNavigate","progress","setProgress","idListForRemoveGame","setIdListForRemoveGame","listCreated","setListCreated","getLists","axios","process","withCredentials","then","res","console","log","data","forEach","games","length","prevIds","_id","catch","err","finally","handleCancel","idsToCompare","Object","values","map","undefined","GamedAdded","every","GameRemoved","some","listItem","prevLists","top","footer","onClick","backgroundColor","id_IGDB","toString","ids","join","config","method","url","headers","toast","position","autoClose","message","addToLists","idsToRemove","removeFromLists","onLoaderFinished","CreateListModal","fontWeight","padding","borderRadius","width","listId","checked","handleCheckboxChange","tags","setTags","inputValue","setInputValue","addTag","tagValue","trim","find","tag","index","tagIndex","preventDefault","newTags","splice","removeTag","maxLength","onKeyDown","key","TextArea","redirectEdit","setName","isPublic","setIsPublic","isRanked","setIsRanked","description","setDescription","redirectToEdit","minWidth","newList","JSON","stringify","idOwner","public","fontWeightStrong","colorBgBase","colorBorder","fontFamily","showCount","defaultValue","buttonStyle"],"sourceRoot":""}