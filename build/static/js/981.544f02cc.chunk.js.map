{"version":3,"file":"static/js/981.544f02cc.chunk.js","mappings":"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","sources":["pages/ExploreLists/ListCard.jsx","pages/ExploreLists/ListCardPlaceholder.jsx","pages/Home/HomeComponents/GetReleaseDates.jsx","pages/Home/HomeComponents/GamesSections.jsx","pages/Home/HomeComponents/SelectionGames.jsx","pages/Home/HomeComponents/PopularLists.jsx","pages/Home/Home.jsx"],"sourcesContent":["import React from 'react'\r\nimport styled, { keyframes, css } from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport colors from '../../utils/style/colors'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst scroll = keyframes`\r\n  0% {\r\n    transform: translateX(0%);\r\n  }\r\n  100% {\r\n    transform: translateX(-150%);\r\n  }\r\n  200% {\r\n    transform: translateX(0%);\r\n  }\r\n`\r\nconst ListContainer = styled.div`\r\n  display: flex;\r\n  min-height: 200px;\r\n\r\n  flex-direction: column;\r\n  min-width: 260px;\r\n  width: 100%;\r\n  background-color: ${colors.backgroundDerivation};\r\n  border-bottom-left-radius: 16px;\r\n  border-bottom-right-radius: 16px;\r\n  transition: 0.1s;\r\n  &:hover {\r\n    transform: scale(1.01);\r\n    // z-index: 1;\r\n  }\r\n  &:hover img {\r\n    ${(props) =>\r\n      props.gamesLength > 4\r\n        ? css`\r\n            animation: ${scroll} ${props.gamesLength + 2}s linear infinite;\r\n            animation-direction: alternate;\r\n          `\r\n        : ''}\r\n  }\r\n  overflow: hidden;\r\n  box-shadow: inset 0 3px 15px 3px #0009;\r\n  position: relative;\r\n`\r\n\r\nconst CoversContainer = styled.div`\r\n  // border-top-left-radius: 16px;\r\n  // border-top-right-radius: 16px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  height: 100px;\r\n  background-color: rgb(83 81 126 / 21%);\r\n  overflow: hidden;\r\n  position: relative;\r\n`\r\n\r\nconst Image = styled.img`\r\n  // width: 100px;\r\n  // height: 100px;\r\n  // object-fit: cover;\r\n  // flex-shrink: 0;\r\n  // box-shadow: inset 0 3px 15px 3px #0009;\r\n`\r\nconst Shadow = styled.div`\r\n  box-shadow: inset 0 3px 15px 3px #0009;\r\n`\r\nexport default function ListCard({ list }) {\r\n  const gamesLength = list.games ? list.games.length : 0\r\n  const { t } = useTranslation()\r\n  return (\r\n    <ListContainer gamesLength={gamesLength}>\r\n      <Link className=\"text-white hover:text-white\" to={`/list/${list._id}`}>\r\n        <Shadow className=\"absolute w-full h-full\" style={{ zIndex: 1 }} />\r\n        <CoversContainer>\r\n          {list.games.map((game) => {\r\n            return (\r\n              <Image\r\n                key={'cover for' + game._id}\r\n                alt={game.name}\r\n                height={'150%'}\r\n                src={\r\n                  game.cover\r\n                    ? `https://images.igdb.com/igdb/image/upload/t_cover_big/${game.cover.image_id}.jpg`\r\n                    : `https://images.igdb.com/igdb/image/upload/t_cover_big/undefined.jpg`\r\n                }\r\n              />\r\n            )\r\n          })}\r\n          <div className=\"flex flex-row gap-2 absolute bottom-2 right-2 \">\r\n            <h4 className=\"  p-1 px-2 rounded-xl bg-yellow-600\">\r\n              {list.gamesLength} games\r\n            </h4>\r\n            {list.ranked && (\r\n              <h3 className=\"  p-1 px-2 rounded-xl bg-[#080705]\">\r\n                {list.ranked ? 'Ranked' : 'Classique'}\r\n              </h3>\r\n            )}\r\n          </div>\r\n        </CoversContainer>\r\n        <div className=\"flex flex-col p-2\">\r\n          <h2>{list.name}</h2>\r\n          <p className=\"  overflow-hidden text-ellipsis whitespace-nowrap py-2 \">\r\n            {list.description}\r\n          </p>\r\n          <div className=\"flex flex-row gap-2  w-10/12 justify-start flex-nowrap  overflow-hidden\">\r\n            {list.tags.map((tag) => {\r\n              return (\r\n                <h5\r\n                  className=\"border-solid border-2 rounded-xl border-white  whitespace-nowrap p-1 px-2\"\r\n                  key={tag._id}\r\n                >\r\n                  {tag.tag}\r\n                </h5>\r\n              )\r\n            })}\r\n            <h3 className=\"absolute right-5\">{list.likesCount} ❤</h3>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    </ListContainer>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\nimport colors from '../../utils/style/colors'\r\n\r\nconst ListContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: 260px;\r\n  width: 100%;\r\n  background-color: ${colors.backgroundDerivation};\r\n  border-bottom-left-radius: 16px;\r\n  border-bottom-right-radius: 16px;\r\n  transition: 0.1s;\r\n  &:hover {\r\n    transform: scale(1.01);\r\n    z-index: 1;\r\n  }\r\n\r\n  overflow: hidden;\r\n  box-shadow: inset 0 3px 15px 3px #0009;\r\n  position: relative;\r\n`\r\n\r\nconst CoversContainer = styled.div`\r\n  // border-top-left-radius: 16px;\r\n  // border-top-right-radius: 16px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  height: 100px;\r\n  background-color: rgb(83 81 126 / 21%);\r\n  overflow: hidden;\r\n  position: relative;\r\n`\r\n\r\nexport default function ListCardPlaceholder() {\r\n  return (\r\n    <ListContainer>\r\n      <CoversContainer>\r\n        <div\r\n          className=\"loading\"\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            width: '100%',\r\n            height: '100%',\r\n          }}\r\n        ></div>\r\n      </CoversContainer>\r\n      <div style={{ display: 'flex', flexDirection: 'column', p: 2 }}>\r\n        <div style={{ padding: '20px 30px' }}>\r\n          <h2\r\n            className=\"loading mb-4\"\r\n            style={{\r\n              width: 300,\r\n              height: 30,\r\n              background: 'rgb(83 81 126 / 21%)',\r\n            }}\r\n          >\r\n            {' '}\r\n          </h2>\r\n          <p\r\n            className=\"loading\"\r\n            style={{\r\n              height: 50,\r\n              background: 'rgb(83 81 126 / 21%)',\r\n            }}\r\n          ></p>\r\n        </div>\r\n      </div>\r\n    </ListContainer>\r\n  )\r\n}\r\n","export const getReleaseDate = ({ game, i18next, t }) => {\r\n  if (game.release_dates && game.release_dates[0].human === 'TBD') return 'TBD'\r\n  // Vérifie si on connaît que l'année de sortie.\r\n  const onlyYear =\r\n    game.first_release_date && /^\\d{4}$/.test(game.release_dates[0].human)\r\n\r\n  // Si la date contient uniquement l'année, on renvoie seulement l'année pour laquelle c'est prévu.\r\n  if (onlyYear) {\r\n    const year = game.release_dates[0].human\r\n    const currentYear = new Date().getFullYear()\r\n    if (year > currentYear) {\r\n      return t('scheduled_for') + ' ' + year + '.'\r\n    } else return year\r\n  }\r\n\r\n  //On récupere la release Date.\r\n  const releaseDate = game.release_dates\r\n    ? new Date(game.first_release_date * 1000)\r\n    : null\r\n\r\n  //On vérifie si il existe une date sinon on renvoie date inconnue.\r\n  if (releaseDate) {\r\n    //On calcule la différence de temps entre la sortie et aujourd'hui.\r\n    const now = new Date()\r\n    const diff = now.getTime() - releaseDate.getTime()\r\n    const diffInYears = Math.floor(diff / (1000 * 60 * 60 * 24 * 365))\r\n    const diffInDays = Math.floor(diff / (1000 * 60 * 60 * 24))\r\n\r\n    //Si le jeu est sortit avant cette année, la différence est en année.\r\n    if (diffInYears > 0) {\r\n      return new Intl.RelativeTimeFormat(i18next.language, {\r\n        numeric: 'auto',\r\n      }).format(-diffInYears, 'year')\r\n    } else {\r\n      //Si le jeu sort / est sorti cette année, la différence est en jours.\r\n      return new Intl.RelativeTimeFormat(i18next.language, {\r\n        numeric: 'auto',\r\n      }).format(-diffInDays, 'day')\r\n    }\r\n  } else {\r\n    return t('release_date_unknown')\r\n  }\r\n}\r\n","import i18next from 'i18next'\r\nimport { getReleaseDate } from './GetReleaseDates'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function GamesSections({ games, nameSection, isLoading }) {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <div className=\" w-full\">\r\n      <div className=\"games\">\r\n        <h3>\r\n          {i18next.language === 'en' ? (\r\n            <>\r\n              {t(nameSection)}{' '}\r\n              <span className=\"title-highlight\">{t('games')}</span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <span className=\"title-highlight\">{t('games')}</span>{' '}\r\n              {t(nameSection)}\r\n            </>\r\n          )}{' '}\r\n        </h3>\r\n        <div className=\"games-carousel mt-2\">\r\n          {isLoading && (\r\n            <>\r\n              {Array.from({ length: 8 }).map((_, index) => (\r\n                <div className=\"game\" key={`placeholder ${index}`}>\r\n                  <div\r\n                    className=\"game-cover loading\"\r\n                    style={{ height: '175px' }}\r\n                  ></div>\r\n                  <div className=\"game-info\">\r\n                    <p className=\"game-title w-full loading h-4\"></p>\r\n                    <p className=\"game-viewership w-2/3 loading h-3\"></p>\r\n                  </div>\r\n\r\n                  <div className=\"game-categories mt-1 h-4 w-1/3  loading\"></div>\r\n                </div>\r\n              ))}\r\n            </>\r\n          )}\r\n          {games &&\r\n            !isLoading &&\r\n            games.map((game) => {\r\n              return (\r\n                <Link\r\n                  key={`game ${game.slug}`}\r\n                  to={`/game/${game.slug}`}\r\n                  className=\"text-white hover:text-white\"\r\n                >\r\n                  <div className=\"game\">\r\n                    <div className=\"game-cover\">\r\n                      <img\r\n                        src={`https://images.igdb.com/igdb/image/upload/t_cover_big/${game.cover.image_id}.jpg`}\r\n                        alt=\"fareeha\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"game-info\">\r\n                      <p className=\"game-title\">{game.name}</p>\r\n                      <p className=\"game-viewership\">\r\n                        {getReleaseDate({ game, i18next, t })}\r\n                      </p>\r\n                    </div>\r\n                    {game.genres && (\r\n                      <div className=\"game-categories mt-1\">\r\n                        <span>{t(game.genres[0].slug)}</span>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Link>\r\n              )\r\n            })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","/* eslint-disable jsx-a11y/img-redundant-alt */\r\nimport AceAttorneyBackground from '../../../assets/images/CardsSelection/ace_attorney_card.png'\r\nimport MonsterHunterCharacter from '../../../assets/images/CardsSelection/monster_hunter_character.png'\r\nimport MOnsterHunterBackground from '../../../assets/images/CardsSelection/monster_hunter_background.png.jpg'\r\nimport SpidermanBackground from '../../../assets/images/CardsSelection/spiderman-background.jpg'\r\nimport BotwBackground from '../../../assets/images/CardsSelection/botw-background.jpg'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nexport default function SelectionGames() {\r\n  const cards = [\r\n    {\r\n      background: BotwBackground,\r\n      title:\r\n        'https://upload.wikimedia.org/wikipedia/fr/9/90/The_Legend_of_Zelda_Breath_of_the_Wild_Logo.png',\r\n      character:\r\n        'https://static.wikia.nocookie.net/characterprofile/images/c/c8/BotW_Link.png',\r\n      link: '/game/the-legend-of-zelda-breath-of-the-wild',\r\n    },\r\n    {\r\n      background: SpidermanBackground,\r\n      title:\r\n        'https://upload.wikimedia.org/wikipedia/fr/f/f2/Marvel_Spider-Man_Logo.png',\r\n      character:\r\n        'https://i.pinimg.com/originals/8f/cf/d2/8fcfd2ce3f71c32ff8fa6f95ae2b1aad.png',\r\n      link: '/search?q=spider-man',\r\n    },\r\n    {\r\n      background: AceAttorneyBackground,\r\n      title:\r\n        'https://static.wikia.nocookie.net/aceattorney/images/5/5c/Ace_Attorney_Series_Logo.png',\r\n      character:\r\n        'https://www.ace-attorney.com/trilogy/images/system/main_img_sp.png',\r\n      link: '/search?q=ace%20attorney',\r\n    },\r\n    {\r\n      background: MOnsterHunterBackground,\r\n      title:\r\n        'https://upload.wikimedia.org/wikipedia/fr/4/40/Monster_Hunter_Rise_Logo.png',\r\n      character: MonsterHunterCharacter,\r\n      link: '/search?q=monster%20hunter',\r\n    },\r\n  ]\r\n  const { t } = useTranslation()\r\n  return (\r\n    <div className=\"flex flex-col w-full    mt-8\">\r\n      <div>\r\n        <h3>\r\n          {t('selections_of_the')}{' '}\r\n          <span className=\"title-highlight\"> {t('month')}</span>\r\n        </h3>{' '}\r\n      </div>\r\n\r\n      <div className=\" grid grid-cols-2  sm:grid-cols-4 justify-center items-center mt-8 gap-4\">\r\n        {cards.map((card) => {\r\n          return (\r\n            <Link\r\n              to={card.link}\r\n              key={card.title}\r\n              className=\"flex  justify-center items-center\"\r\n            >\r\n              <div className=\"card\">\r\n                <div className=\"wrapper\">\r\n                  <img\r\n                    alt=\"Background image\"\r\n                    src={card.background}\r\n                    className=\"cover-image\"\r\n                  />\r\n                </div>\r\n                <img alt=\"Title logo\" src={card.title} className=\"title\" />\r\n                <img\r\n                  alt=\"Game Character image\"\r\n                  src={card.character}\r\n                  className=\"character\"\r\n                />\r\n              </div>\r\n            </Link>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import i18next from 'i18next'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { useEffect, useState } from 'react'\r\nimport ListCard from '../../ExploreLists/ListCard'\r\nimport ListCardPlaceholder from '../../ExploreLists/ListCardPlaceholder'\r\nimport colors from '../../../utils/style/colors'\r\n\r\nexport default function PopularLists() {\r\n  const { t } = useTranslation()\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [lists, setLists] = useState([])\r\n\r\n  const getLists = () => {\r\n    setIsLoading(true)\r\n\r\n    const popular = localStorage.getItem('popularLists')\r\n    const expirationDate = localStorage.getItem('expirationDate')\r\n    if (popular && expirationDate && new Date() < new Date(expirationDate)) {\r\n      setLists(JSON.parse(popular))\r\n      setIsLoading(false)\r\n    } else {\r\n      let uri = `${process.env.REACT_APP_IP_ADRESS}/api/lists/?limit=3&sort=likesCount&order=desc\r\n      `\r\n      axios\r\n        .get(uri.trim())\r\n        .then((res) => {\r\n          setLists(res.data.lists)\r\n          localStorage.setItem('popularLists', JSON.stringify(res.data.lists))\r\n        })\r\n        .catch((err) => console.log(err))\r\n        .finally(() => {\r\n          setIsLoading(false)\r\n        })\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (lists === undefined || lists.length === 0) getLists()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n  return (\r\n    <div className=\" w-full\">\r\n      <div className=\"games\">\r\n        <h3>\r\n          {i18next.language === 'en' ? (\r\n            <>\r\n              {t('popular')}{' '}\r\n              <span className=\"title-highlight\">{t('lists')}</span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <span className=\"title-highlight\">{t('lists')}</span>{' '}\r\n              {t('popular')}\r\n            </>\r\n          )}\r\n        </h3>\r\n        <div className=\"w-full flex flex-row overflow-auto gap-2 p-2  scrollbar-thumb-yellow-500 scrollbar-thin scrollbar-rounded-[50px]\">\r\n          {lists &&\r\n            !isLoading &&\r\n            lists.map((list) => {\r\n              return <ListCard list={list} key={list._id} />\r\n            })}\r\n          {isLoading &&\r\n            Array.from({ length: 6 }).map((_, index) => (\r\n              <ListCardPlaceholder key={'list + ' + index} />\r\n            ))}\r\n        </div>\r\n        <Link style={{ color: colors.primary }} to=\"/lists\">\r\n          {t('show_more')}\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { Suspense, useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'react-i18next'\r\nimport i18next from 'i18next'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nimport './Home.css'\r\nimport colors from '../../utils/style/colors'\r\nimport GamesSections from './HomeComponents/GamesSections'\r\nimport SelectionGames from './HomeComponents/SelectionGames'\r\nimport PopularLists from './HomeComponents/PopularLists'\r\n\r\nconst HomeWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${colors.background};\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n  padding: 10px;\r\n  padding-top: 80px;\r\n`\r\n\r\nfunction HomePage() {\r\n  const { t } = useTranslation()\r\n  document.title = 'MyPlayLog - ' + t('home')\r\n  const [latestGames, setLatestGames] = useState([])\r\n  const [upcomingGames, setUpcomingGames] = useState([])\r\n  const [isLoading, setIsLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    //Récuperer les objets si stockés dans le storage\r\n    const latestGames = localStorage.getItem('latestGames')\r\n    const upcomingGames = localStorage.getItem('upcomingGames')\r\n    const expirationDate = localStorage.getItem('expirationDate')\r\n\r\n    if (\r\n      latestGames &&\r\n      upcomingGames &&\r\n      expirationDate &&\r\n      new Date() < new Date(expirationDate)\r\n    ) {\r\n      setLatestGames(JSON.parse(latestGames))\r\n      setUpcomingGames(JSON.parse(upcomingGames))\r\n      setIsLoading(false)\r\n    } else {\r\n      axios\r\n        .get(`${process.env.REACT_APP_IP_ADRESS}/api/games/latest`)\r\n        .then((res) => {\r\n          setLatestGames(res.data[0].result)\r\n          setUpcomingGames(res.data[1].result)\r\n          const expiration = new Date()\r\n          expiration.setHours(expiration.getHours() + 12) // expiration dans 12 heures\r\n          localStorage.setItem(\r\n            'latestGames',\r\n            JSON.stringify(res.data[0].result)\r\n          )\r\n          localStorage.setItem(\r\n            'upcomingGames',\r\n            JSON.stringify(res.data[1].result)\r\n          )\r\n          localStorage.setItem('expirationDate', expiration)\r\n        })\r\n        .catch((err) => console.log(err))\r\n        .finally(() => setIsLoading(false))\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <HomeWrapper>\r\n      <Suspense fallback=\"loading\">\r\n        <div className=\" text-white font-bold text-base text-center\">\r\n          <h1>{t('welcome_to_home_page')}</h1>\r\n        </div>\r\n        <GamesSections\r\n          games={latestGames}\r\n          nameSection={'trending'}\r\n          isLoading={isLoading}\r\n        />\r\n        <div className=\"mb-4\" />\r\n\r\n        <div className=\"w-full \">\r\n          <PopularLists />\r\n        </div>\r\n        <div className=\"mb-4\" />\r\n\r\n        <GamesSections\r\n          games={upcomingGames}\r\n          nameSection={'upcoming'}\r\n          isLoading={isLoading}\r\n        />\r\n\r\n        <div className=\"w-full \">\r\n          <SelectionGames />\r\n        </div>\r\n      </Suspense>\r\n    </HomeWrapper>\r\n  )\r\n}\r\nexport default HomePage\r\n"],"names":["scroll","keyframes","ListContainer","styled","colors","props","gamesLength","css","CoversContainer","Image","Shadow","ListCard","list","games","length","useTranslation","t","className","to","_id","style","zIndex","map","game","alt","name","height","src","cover","image_id","ranked","description","tags","tag","likesCount","ListCardPlaceholder","display","justifyContent","alignItems","width","flexDirection","p","padding","background","getReleaseDate","i18next","release_dates","human","first_release_date","test","year","Date","getFullYear","releaseDate","diff","getTime","diffInYears","Math","floor","diffInDays","Intl","RelativeTimeFormat","language","numeric","format","GamesSections","nameSection","isLoading","Array","from","_","index","slug","genres","SelectionGames","cards","BotwBackground","title","character","link","SpidermanBackground","AceAttorneyBackground","MOnsterHunterBackground","MonsterHunterCharacter","card","PopularLists","useState","setIsLoading","lists","setLists","useEffect","undefined","popular","localStorage","getItem","expirationDate","JSON","parse","uri","process","axios","trim","then","res","data","setItem","stringify","catch","err","console","log","finally","getLists","color","HomeWrapper","document","latestGames","setLatestGames","upcomingGames","setUpcomingGames","result","expiration","setHours","getHours","Suspense","fallback"],"sourceRoot":""}