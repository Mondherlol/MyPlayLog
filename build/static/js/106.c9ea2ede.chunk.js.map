{"version":3,"file":"static/js/106.c9ea2ede.chunk.js","mappings":"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","sources":["pages/EditList/ListSearchGameToAdd.jsx","pages/EditList/PopRemoveGame.jsx","pages/EditList/SortableGame.jsx","pages/EditList/DragAndDropGames.jsx","pages/EditList/EditListTags.jsx","pages/EditList/EditList.jsx","pages/EditList/PopUpDeleteList.jsx"],"sourcesContent":["import { AutoComplete, Input } from 'antd'\r\nimport { useState, useEffect } from 'react'\r\nimport { debounce } from 'lodash'\r\nimport axios from 'axios'\r\nimport LoadingBar from 'react-top-loading-bar'\r\nimport colors from '../../utils/style/colors'\r\nimport { toast } from 'react-toastify'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { useRef } from 'react'\r\n\r\nexport default function ListSearchGameToAdd({ listId, list, setList }) {\r\n  const [options, setOptions] = useState([])\r\n  const [results, setResults] = useState([])\r\n  const [selectedGame, setSelectedGame] = useState({})\r\n  const [progress, setProgress] = useState(0)\r\n  const [searchValue, setSearchValue] = useState('')\r\n  const { t } = useTranslation()\r\n\r\n  useEffect(() => {\r\n    if (selectedGame && selectedGame !== {} && selectedGame.id) {\r\n      const isGameAlreadyInList = list.games.some(\r\n        (game) => game.id_IGDB === selectedGame.id\r\n      )\r\n      if (!isGameAlreadyInList) {\r\n        setProgress(50)\r\n\r\n        const data = { id_IGDB: selectedGame.id }\r\n\r\n        const id = listId\r\n        if (id !== undefined) {\r\n          const config = {\r\n            method: 'post',\r\n            url: `${process.env.REACT_APP_IP_ADRESS}/api/lists/game?ids=${id}`,\r\n            withCredentials: true,\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            data: { ...data },\r\n          }\r\n          axios(config)\r\n            .then((res) => {\r\n              setProgress(80)\r\n              setList((prevState) => {\r\n                let gameToAdd = { ...selectedGame }\r\n                gameToAdd.id_IGDB = gameToAdd.id\r\n                const gameIndex = prevState.games.findIndex(\r\n                  (game) => game.id === gameToAdd.id\r\n                )\r\n                if (gameIndex === -1) {\r\n                  return {\r\n                    ...prevState,\r\n                    games: [gameToAdd, ...prevState.games],\r\n                  }\r\n                }\r\n                return prevState\r\n              })\r\n            })\r\n            .catch((err) => {\r\n              console.log(err)\r\n              toast.error(err.message, {\r\n                position: toast.POSITION.BOTTOM_RIGHT,\r\n                theme: 'dark',\r\n              })\r\n            })\r\n            .finally(() => setProgress(100))\r\n        }\r\n      } else {\r\n        toast.info(t('game_already_in_list'), {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          theme: 'dark',\r\n          autoClose: 3000,\r\n        })\r\n      }\r\n      setSelectedGame({})\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selectedGame])\r\n\r\n  function debounce(func, delay) {\r\n    let timer\r\n    let lastArgs\r\n    return function () {\r\n      const context = this\r\n      const args = arguments\r\n      clearTimeout(timer)\r\n      lastArgs = args\r\n      timer = setTimeout(() => {\r\n        func.apply(context, lastArgs)\r\n      }, delay)\r\n    }\r\n  }\r\n\r\n  const onSelect = (value) => {\r\n    const game = results.find((g) => g.slug === value)\r\n    setSelectedGame(game)\r\n    setSearchValue('')\r\n  }\r\n  function searchGame(name) {\r\n    if (name && name !== '') {\r\n      setProgress(10)\r\n\r\n      axios\r\n        .get(\r\n          `${process.env.REACT_APP_IP_ADRESS}/api/games/search/light/${name}`\r\n        )\r\n        .then((res) => setResults(res.data))\r\n        .catch((err) => console.log(err))\r\n        .finally(() => setProgress(100))\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (results)\r\n      setOptions(\r\n        results.map((game) => {\r\n          return {\r\n            value: game.slug,\r\n            label: (\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                  justifyContent: 'space-between',\r\n                }}\r\n              >\r\n                <div className=\"flex flex-row justify-start items-start gap-2\">\r\n                  <img\r\n                    src={`https://images.igdb.com/igdb/image/upload/t_cover_small/${\r\n                      game.cover ? game.cover.image_id : 'undefined'\r\n                    }.jpg`}\r\n                    alt=\"zelda\"\r\n                    width={50}\r\n                    height={65}\r\n                  />\r\n\r\n                  <div className=\" flex flex-col flex-wrap\">\r\n                    <h4 className=\" overflow-hidden text-ellipsis \">\r\n                      {game.name}\r\n                    </h4>\r\n                    {game.first_release_date && (\r\n                      <p>\r\n                        {new Date(game.first_release_date * 1000).getFullYear()}\r\n                      </p>\r\n                    )}\r\n\r\n                    <p className=\" text-gray-500  text-xs\">\r\n                      {game.platforms &&\r\n                        game.platforms\r\n                          .map((platform) => {\r\n                            return platform.abbreviation\r\n                              ? platform.abbreviation\r\n                              : platform.name\r\n                          })\r\n                          .join(', ')}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }\r\n        })\r\n      )\r\n  }, [results])\r\n\r\n  useEffect(() => {\r\n    const delayDebounceFn = setTimeout(() => {\r\n      console.log(searchValue)\r\n      if (searchValue.length > 2) {\r\n        searchGame(searchValue)\r\n      }\r\n    }, 500)\r\n    return () => clearTimeout(delayDebounceFn)\r\n  }, [searchValue])\r\n\r\n  return (\r\n    <>\r\n      <LoadingBar\r\n        color={colors.primary}\r\n        progress={progress}\r\n        onLoaderFinished={() => setProgress(0)}\r\n      />\r\n      <AutoComplete\r\n        dropdownMatchSelectWidth={252}\r\n        style={{\r\n          width: 300,\r\n        }}\r\n        value={searchValue}\r\n        options={options}\r\n        onSelect={onSelect}\r\n        // onSearch={handleSearch}\r\n        notFoundContent={'Pas de résultat !'}\r\n      >\r\n        <Input.Search\r\n          size=\"large\"\r\n          placeholder={t('search_any_game')}\r\n          onChange={(e) => {\r\n            setSearchValue(e.target.value)\r\n            // handleSearch(e.target.value)\r\n          }}\r\n        />\r\n      </AutoComplete>\r\n    </>\r\n  )\r\n}\r\n","import { Popconfirm } from 'antd'\r\nimport styled from 'styled-components'\r\nimport axios from 'axios'\r\nimport colors from '../../utils/style/colors'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst Delete = styled.button`\r\n  border: none;\r\n  position: absolute;\r\n  bottom: 50px;\r\n  right: 2px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: absolute;\r\n  color: ${colors.danger};\r\n  font-size: 2.2vh;\r\n  background-color: rgb(255, 255, 255);\r\n\r\n  padding: 5px 10px 5px 10px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: ${colors.danger};\r\n    color: white;\r\n  }\r\n`\r\n\r\nconst PopRemoveGame = ({ gameId, setList, list, setProgress }) => {\r\n  const { t } = useTranslation()\r\n  const confirm = () => {\r\n    setProgress(20)\r\n    axios\r\n      .delete(\r\n        `${process.env.REACT_APP_IP_ADRESS}/api/lists/${list._id}/${gameId}`,\r\n        { withCredentials: true }\r\n      )\r\n      .then((res) => {\r\n        // obtenir l'index du jeu à supprimer\r\n        const gameIndex = list.games.findIndex((game) => game.id === gameId)\r\n\r\n        // créer un nouveau tableau de jeux sans le jeu à supprimer\r\n        const updatedGames = [\r\n          ...list.games.slice(0, gameIndex),\r\n          ...list.games.slice(gameIndex + 1),\r\n        ]\r\n\r\n        // mettre à jour l'état avec le nouveau tableau de jeux\r\n        setList((prevState) => ({\r\n          ...prevState,\r\n          games: updatedGames,\r\n        }))\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n        toast.error(err.message, {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          theme: 'dark',\r\n        })\r\n      })\r\n      .finally(() => setProgress(100))\r\n  }\r\n  return (\r\n    <>\r\n      <Popconfirm\r\n        placement=\"bottom\"\r\n        title={`${t('remove_this_game')}?`}\r\n        onConfirm={confirm}\r\n        okText={t('yes')}\r\n        okButtonProps={{\r\n          style: {\r\n            backgroundColor: colors.danger,\r\n          },\r\n        }}\r\n        cancelText={t('no')}\r\n      >\r\n        <Delete>\r\n          <h5>{t('delete').toUpperCase()}</h5>\r\n        </Delete>\r\n      </Popconfirm>\r\n    </>\r\n  )\r\n}\r\nexport default PopRemoveGame\r\n","import { useSortable } from '@dnd-kit/sortable'\r\nimport { CSS } from '@dnd-kit/utilities'\r\nimport styled from 'styled-components'\r\nimport PopRemoveGame from './PopRemoveGame'\r\nconst defaultPicture =\r\n  'https://images.igdb.com/igdb/image/upload/t_cover_big/nocover.png'\r\n\r\nconst StyledCard = styled.figure`\r\n  margin: 7px;\r\n  width: calc(180px - 2vw);\r\n  @media (max-width: 768px) {\r\n    width: calc(180px - 10vw);\r\n  }\r\n  cursor:grab;\r\n\r\n  overflow: hidden;\r\n  position:relative;\r\n  box-shadow: 0 5px 10px rgb(0 0 0 / 80%);\r\n  transform-origin: center top;\r\n  transform-style: preserve-3d;\r\n  transform: translateZ(0);\r\n  transition: 0.3s;\r\n  &:hover {\r\n    box-shadow 0 8px 16px 3px rgba( #000, .6 );\r\n    transform translateY( -3px ) scale( 1.05 );\r\n\r\n  }\r\n  & > img{\r\n    width:100%;\r\n    min-height:100%;\r\n  }\r\n  &:hover > figcaption{\r\n    transform:translateY(0px);\r\n  }\r\n`\r\n\r\nconst StyledName = styled.figcaption`\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  color: white;\r\n  transition:0.28s;\r\n  text-shadow: 1px 1px 2px black;\r\n  padding-bottom 10px;\r\n\r\n  margin-left:5px;\r\n  \r\n  transform:translateY(200px);\r\n`\r\n\r\nconst Rank = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: absolute;\r\n  color: white;\r\n  font-size: 3vh;\r\n  width: 35px;\r\n  border: 2px solid white;\r\n  height: 35px;\r\n  top: 3px;\r\n  left: 3px;\r\n  background-color: rgb(8, 7, 27, 0.7);\r\n  border-radius: 12px;\r\n`\r\n\r\nexport function SortableGame(props) {\r\n  const { attributes, listeners, setNodeRef, transform, transition } =\r\n    useSortable({ id: props.id })\r\n\r\n  function getCover() {\r\n    if (props.game.cover)\r\n      return `https://images.igdb.com/igdb/image/upload/t_cover_big/${props.game.cover.image_id}.jpg`\r\n    else return defaultPicture\r\n  }\r\n\r\n  const style = {\r\n    transform: CSS.Transform.toString(transform),\r\n    transition,\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"relative\"\r\n      ref={setNodeRef}\r\n      style={style}\r\n      {...attributes}\r\n      {...listeners}\r\n    >\r\n      <StyledCard>\r\n        <img src={getCover()} alt={props.game.slug} />\r\n        <StyledName>{props.game.name}</StyledName>\r\n        {props.list.ranked && (\r\n          <Rank>\r\n            {/* <h1 style={{ color: props.index === 0 ? colors.primary : 'white' }}> */}\r\n            <h1>{props.index + 1}</h1>\r\n          </Rank>\r\n        )}\r\n      </StyledCard>\r\n\r\n      <PopRemoveGame\r\n        setList={props.setList}\r\n        list={props.list}\r\n        gameId={props.game.id}\r\n        setProgress={props.setProgress}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import {\r\n  DndContext,\r\n  closestCenter,\r\n  useSensor,\r\n  useSensors,\r\n  TouchSensor,\r\n  MouseSensor,\r\n} from '@dnd-kit/core'\r\nimport { SortableContext } from '@dnd-kit/sortable'\r\nimport { SortableGame } from './SortableGame'\r\n\r\nexport default function DragAndDropGames({ list, setList, setProgress }) {\r\n  const sensors = useSensors(\r\n    useSensor(MouseSensor, {\r\n      activationConstraint: {\r\n        distance: 8,\r\n      },\r\n    }),\r\n    useSensor(TouchSensor, {\r\n      // Press delay of 250ms, with tolerance of 5px of movement\r\n      activationConstraint: {\r\n        delay: 250,\r\n        tolerance: 5,\r\n      },\r\n    })\r\n  )\r\n\r\n  return (\r\n    <DndContext\r\n      autoScroll={true}\r\n      sensors={sensors}\r\n      collisionDetection={closestCenter}\r\n      onDragEnd={handleDragEnd}\r\n    >\r\n      <div className=\"flex flex-row\">\r\n        <div className=\"flex flex-col flex-1\">\r\n          <SortableContext items={list.games}>\r\n            <div className=\"flex flex-row flex-wrap\">\r\n              {list.games.map((game, index) => (\r\n                <SortableGame\r\n                  list={list}\r\n                  setList={setList}\r\n                  key={game.id}\r\n                  id={game.id}\r\n                  game={game}\r\n                  index={index}\r\n                  setProgress={setProgress}\r\n                />\r\n              ))}\r\n            </div>\r\n          </SortableContext>\r\n        </div>\r\n      </div>\r\n    </DndContext>\r\n  )\r\n\r\n  function handleDragEnd(event) {\r\n    const { active, over } = event\r\n    if (active.id !== over.id) {\r\n      const oldIndex = list.games.findIndex((game) => game.id === active.id)\r\n      const newIndex = list.games.findIndex((game) => game.id === over.id)\r\n      setList((list) => {\r\n        const newGames = [...list.games]\r\n        const [movedGame] = newGames.splice(oldIndex, 1)\r\n        newGames.splice(newIndex, 0, movedGame)\r\n        // Update the rank of each game based on its new index in the list\r\n        const updatedGames = newGames.map((game, index) => ({\r\n          ...game,\r\n          rank: index + 1,\r\n        }))\r\n\r\n        return { ...list, games: updatedGames }\r\n      })\r\n    }\r\n  }\r\n}\r\n","import { PlusOutlined } from '@ant-design/icons'\r\nimport { Input, Space, Tag, Tooltip, ConfigProvider } from 'antd'\r\nimport { useEffect, useRef, useState } from 'react'\r\nimport colors from '../../utils/style/colors'\r\nimport { t } from 'i18next'\r\n\r\nfunction EditListTags({ tags, setTags }) {\r\n  const [inputVisible, setInputVisible] = useState(false)\r\n  const [inputValue, setInputValue] = useState('')\r\n  const [editInputIndex, setEditInputIndex] = useState(-1)\r\n  const [editInputValue, setEditInputValue] = useState('')\r\n  const inputRef = useRef(null)\r\n  const editInputRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    if (inputVisible) {\r\n      inputRef.current?.focus()\r\n    }\r\n  }, [inputVisible])\r\n\r\n  useEffect(() => {\r\n    editInputRef.current?.focus()\r\n  }, [inputValue])\r\n\r\n  const handleClose = (removedTag) => {\r\n    const newTags = tags.filter((tag) => tag.tag !== removedTag.tag)\r\n    console.log(newTags)\r\n    setTags(newTags)\r\n  }\r\n\r\n  const showInput = () => {\r\n    setInputVisible(true)\r\n  }\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value)\r\n  }\r\n\r\n  const handleInputConfirm = () => {\r\n    if (inputValue && !tags.some((tag) => tag.tag === inputValue)) {\r\n      setTags([...tags, { tag: inputValue }])\r\n    }\r\n    setInputVisible(false)\r\n    setInputValue('')\r\n  }\r\n\r\n  const handleEditInputChange = (e) => {\r\n    setEditInputValue(e.target.value)\r\n  }\r\n\r\n  const handleEditInputConfirm = () => {\r\n    const newTags = [...tags]\r\n    newTags[editInputIndex].tag = editInputValue\r\n    setTags(newTags)\r\n    setEditInputIndex(-1)\r\n    setInputValue('')\r\n  }\r\n\r\n  const tagInputStyle = {\r\n    width: 78,\r\n    verticalAlign: 'top',\r\n  }\r\n\r\n  const tagPlusStyle = {\r\n    background: colors.backgroundDerivation,\r\n    borderStyle: 'dashed',\r\n    color: colors.primary,\r\n  }\r\n\r\n  return (\r\n    <ConfigProvider\r\n      theme={{\r\n        token: {\r\n          colorBorder: 'white',\r\n          fontSize: 18,\r\n          colorInfoBorderHover: 'white',\r\n          colorPrimaryBorderHover: 'white',\r\n          colorPrimaryHover: 'white',\r\n          fontFamily: 'Inter',\r\n        },\r\n      }}\r\n    >\r\n      <Space size={[0, 8]} wrap>\r\n        <Space size={[0, 8]} wrap>\r\n          {tags.map((tag, index) => {\r\n            if (editInputIndex === index) {\r\n              return (\r\n                <Input\r\n                  ref={editInputRef}\r\n                  key={tag.tag}\r\n                  size=\"small\"\r\n                  style={tagInputStyle}\r\n                  value={editInputValue}\r\n                  onChange={handleEditInputChange}\r\n                  onBlur={handleEditInputConfirm}\r\n                  onPressEnter={handleEditInputConfirm}\r\n                />\r\n              )\r\n            }\r\n            const isLongTag = tag.tag.length > 20\r\n            const tagElem = (\r\n              <Tag\r\n                key={tag.tag}\r\n                closable={true}\r\n                style={{\r\n                  fontSize: 18,\r\n                  fontFamily: 'Inter',\r\n                  userSelect: 'none',\r\n                  color: colors.backgroundDerivation,\r\n                }}\r\n                color=\"white\"\r\n                closeIcon={<span className=\"  font-extrabold\">✕</span>}\r\n                onClose={() => handleClose(tag)}\r\n              >\r\n                <span\r\n                  onDoubleClick={(e) => {\r\n                    if (index !== 0) {\r\n                      setEditInputIndex(index)\r\n                      setEditInputValue(tag.tag)\r\n                      e.preventDefault()\r\n                    }\r\n                  }}\r\n                >\r\n                  {isLongTag ? `${tag.tag.slice(0, 20)}...` : tag.tag}\r\n                </span>\r\n              </Tag>\r\n            )\r\n            return isLongTag ? (\r\n              <Tooltip title={tag} key={tag}>\r\n                {tagElem}\r\n              </Tooltip>\r\n            ) : (\r\n              tagElem\r\n            )\r\n          })}\r\n        </Space>\r\n        {inputVisible ? (\r\n          <Input\r\n            ref={inputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            style={tagInputStyle}\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            onBlur={handleInputConfirm}\r\n            onPressEnter={handleInputConfirm}\r\n            maxLength={20}\r\n          />\r\n        ) : (\r\n          <Tag style={tagPlusStyle} onClick={showInput}>\r\n            <PlusOutlined /> {t('new_tag')}\r\n          </Tag>\r\n        )}\r\n      </Space>\r\n    </ConfigProvider>\r\n  )\r\n}\r\nexport default EditListTags\r\n","import { useEffect, useState, useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useParams, Link, useNavigate } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport ListSearchGameToAdd from './ListSearchGameToAdd'\r\nimport colors from '../../utils/style/colors'\r\nimport './EditsList.css'\r\nimport { Input, ConfigProvider, Radio } from 'antd'\r\nimport LoadingBar from 'react-top-loading-bar'\r\nimport { toast } from 'react-toastify'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport { LoginData } from '../../Helper/Context'\r\nimport { Loader } from '../../utils/Atoms'\r\nimport DragAndDropGames from './DragAndDropGames'\r\nimport EditListTags from './EditListTags'\r\nimport PopUpDeleteList from './PopUpDeleteList'\r\nimport ErrorOccured from '../../components/ErrorOccured/ErrorOccured'\r\n\r\nconst { TextArea } = Input\r\n\r\nconst PageWrapper = styled.div`\r\n  min-height: 100vh;\r\n  padding: 20px;\r\n  padding-top: 80px;\r\n  overflow: hidden;\r\n`\r\nconst InputName = styled.input`\r\n  width: 100%;\r\n  padding: 10px 20px;\r\n  // padding-left:10px;\r\n  border-color: transparent;\r\n  border-bottom: 1px solid darkgrey;\r\n  font-size: 1.875rem;\r\n  line-height: 2.25rem;\r\n  font-weight: bold;\r\n  background: transparent;\r\n  color: white;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &::-webkit-input-placeholder {\r\n    padding-left: 5px;\r\n    font-size: 15px;\r\n    color: rgb(255,255,255,0.8)\r\n  }\r\n  &::-moz-placeholder {\r\n    /* Firefox 19+ */\r\n    padding-left: 5px;\r\n    font-size: 15px;\r\n    color: rgb(255,255,255,0.8)\r\n  }\r\n  &:-ms-input-placeholder {\r\n    padding-left: 5px;\r\n    font-size: 15px;\r\n    color: rgb(255,255,255,0.8)\r\n      );\r\n  }\r\n  \r\n`\r\n\r\nexport default function EditList() {\r\n  const { t } = useTranslation()\r\n  const { listId } = useParams()\r\n  const [list, setList] = useState(null)\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(null)\r\n  const [progress, setProgress] = useState(0)\r\n  const { loginData } = useContext(LoginData)\r\n\r\n  const [name, setName] = useState('')\r\n  const [isPublic, setIsPublic] = useState(true)\r\n  const [isRanked, setIsRanked] = useState(false)\r\n  const [description, setDescription] = useState('')\r\n  const [tags, setTags] = useState([])\r\n  const navigate = useNavigate()\r\n  const onPublicChange = (e) => {\r\n    setIsPublic(e.target.value === 'public')\r\n  }\r\n  const onRankedChange = (e) => {\r\n    setIsRanked(e.target.value === 'ranked')\r\n    const updatedList = { ...list }\r\n    updatedList.ranked = e.target.value === 'ranked'\r\n    setList(updatedList)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setProgress(20)\r\n    axios\r\n      .get(`${process.env.REACT_APP_IP_ADRESS}/api/lists/${listId}`)\r\n      .then((response) => {\r\n        setList(response.data)\r\n        if (\r\n          !loginData ||\r\n          (loginData && loginData._id !== response.data.idOwner)\r\n        )\r\n          navigate('/login')\r\n        setLoading(false)\r\n        setName(response.data.name)\r\n        setDescription(\r\n          response.data.description ? response.data.description : ''\r\n        )\r\n        setIsPublic(response.data.public)\r\n        setIsRanked(response.data.ranked)\r\n        setTags(response.data.tags)\r\n      })\r\n      .catch((error) => {\r\n        setError(error)\r\n        console.log(error)\r\n        setLoading(false)\r\n        toast.error(error.message, {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          theme: 'dark',\r\n        })\r\n      })\r\n      .finally(() => setProgress(100))\r\n  }, [listId])\r\n\r\n  const handleSaveList = () => {\r\n    setProgress(10)\r\n    const updatedList = { ...list }\r\n    updatedList.name = name\r\n    updatedList.public = isPublic\r\n    updatedList.tags = tags\r\n    updatedList.description = description\r\n\r\n    // Remove Rank if classic\r\n    if (!list.ranked) {\r\n      updatedList.games = updatedList.games.map((game) => {\r\n        const { rank, ...rest } = game\r\n        return rest\r\n      })\r\n    } else {\r\n      // Set the rank if ranked\r\n      updatedList.games = updatedList.games.map((game, index) => {\r\n        return {\r\n          ...game,\r\n          rank: index + 1,\r\n        }\r\n      })\r\n    }\r\n\r\n    const config = {\r\n      method: 'put',\r\n      withCredentials: true,\r\n      url: `${process.env.REACT_APP_IP_ADRESS}/api/lists/${listId}`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      data: updatedList,\r\n    }\r\n    axios(config)\r\n      .then((res) => {\r\n        console.log(res)\r\n        setProgress(100)\r\n        toast.success(t('list_updated_with_success'), {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          theme: 'dark',\r\n        })\r\n        navigate(`/list/${listId}`)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n        toast.error(err.message, {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          theme: 'dark',\r\n        })\r\n      })\r\n    setProgress(100)\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <PageWrapper className=\"flex w-full justify-center items-center\">\r\n        <LoadingBar\r\n          color={colors.primary}\r\n          progress={progress}\r\n          onLoaderFinished={() => setProgress(0)}\r\n        />\r\n        <Loader />\r\n      </PageWrapper>\r\n    )\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Une erreur est survenue : {error.message}</div>\r\n  }\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <LoadingBar\r\n        color={colors.primary}\r\n        progress={progress}\r\n        onLoaderFinished={() => setProgress(0)}\r\n      />\r\n      {list ? (\r\n        <div className=\"flex flex-col gap-4\">\r\n          <div className=\" text-start my-35 w-full\">\r\n            <label>{t('list_name')} :</label>\r\n            <InputName\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              type=\"text\"\r\n              placeholder={t('enter_list_name')}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"flex flex-row flex-wrap sm:flex-nowrap  justify-between  gap-2 \">\r\n            <div\r\n              className=\"p-4 rounded-xl flex pb-4 h-fit sticky top-20  flex-col\"\r\n              style={{\r\n                backgroundColor: colors.backgroundDerivation,\r\n              }}\r\n            >\r\n              <div\r\n                className=\"flex flex-col gap-2  \"\r\n                style={{\r\n                  minWidth: 300,\r\n                  maxWidth: 300,\r\n                }}\r\n              >\r\n                <label>{t('add_game')}</label>{' '}\r\n                <ListSearchGameToAdd\r\n                  listId={listId}\r\n                  list={list}\r\n                  setList={setList}\r\n                />\r\n                <label>Description</label>{' '}\r\n                <ConfigProvider\r\n                  theme={{\r\n                    token: {\r\n                      colorBgContainer: 'rgba(255, 255, 255, 0.9)',\r\n                      colorText: 'black',\r\n                      fontWeightStrong: 800,\r\n                      colorBorder: 'transparent',\r\n                      colorPrimaryBorderHover: colors.primary,\r\n                      colorPrimaryHover: colors.primary,\r\n                      colorTextPlaceholder: 'grey',\r\n                      fontFamily: 'Inter',\r\n                    },\r\n                  }}\r\n                >\r\n                  <TextArea\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                    showCount\r\n                    maxLength={300}\r\n                    placeholder={t('describe_your_list_in_some_words') + '...'}\r\n                    autoSize={{\r\n                      minRows: 3,\r\n                      maxRows: 5,\r\n                    }}\r\n                    // status=\"error\"\r\n                    defaultValue={list.description}\r\n                  />\r\n                </ConfigProvider>\r\n                <ConfigProvider\r\n                  theme={{\r\n                    token: {\r\n                      fontWeightStrong: 800,\r\n                      colorText: 'white',\r\n                      colorBgBase: colors.backgroundDerivation,\r\n                      colorBorder: 'white',\r\n\r\n                      colorPrimary: colors.primary,\r\n                      colorTextPlaceholder: 'grey',\r\n                      fontFamily: 'Inter',\r\n                    },\r\n                  }}\r\n                >\r\n                  <div className=\"flex flex-col\">\r\n                    <label>{t('visibility')}</label>\r\n                    <Radio.Group\r\n                      defaultValue={isPublic ? 'public' : 'private'}\r\n                      buttonStyle=\"solid\"\r\n                      onChange={onPublicChange}\r\n                    >\r\n                      <Radio.Button\r\n                        style={{ color: isPublic ? 'black' : 'white' }}\r\n                        value=\"public\"\r\n                      >\r\n                        {t('public')}\r\n                      </Radio.Button>\r\n                      <Radio.Button\r\n                        style={{ color: !isPublic ? 'black' : 'white' }}\r\n                        value=\"private\"\r\n                      >\r\n                        {t('private')}\r\n                      </Radio.Button>\r\n                    </Radio.Group>\r\n                  </div>\r\n                  <div className=\"flex flex-col\">\r\n                    <label>{t('type')}</label>\r\n                    <Radio.Group\r\n                      defaultValue={isRanked ? 'ranked' : 'classic'}\r\n                      buttonStyle=\"solid\"\r\n                      onChange={onRankedChange}\r\n                    >\r\n                      <Radio.Button\r\n                        style={{ color: !isRanked ? 'black' : 'white' }}\r\n                        value=\"classic\"\r\n                      >\r\n                        {t('classic')}\r\n                      </Radio.Button>\r\n                      <Radio.Button\r\n                        value=\"ranked\"\r\n                        style={{ color: isRanked ? 'black' : 'white' }}\r\n                      >\r\n                        {t('top')}\r\n                      </Radio.Button>\r\n                    </Radio.Group>\r\n                  </div>\r\n                </ConfigProvider>\r\n                <label>Tags</label>{' '}\r\n                <EditListTags tags={tags} setTags={setTags} />\r\n                <button\r\n                  onClick={handleSaveList}\r\n                  style={{\r\n                    color: colors.backgroundDerivation,\r\n                    fontWeight: 700,\r\n                  }}\r\n                  className=\" text-white p-2 mx-2 border-none hover:cursor-pointer bg-[#FDC500] hover:bg-[#FFD12E] btn-save-list\"\r\n                >\r\n                  {t('save_list').toUpperCase()}{' '}\r\n                </button>{' '}\r\n                <div className=\"flex flex-row w-full \">\r\n                  <PopUpDeleteList listId={listId} navigate={navigate} />\r\n                  <Link\r\n                    to={`/list/${listId}`}\r\n                    style={{\r\n                      color: 'white',\r\n                      fontWeight: 700,\r\n                      textAlign: 'center',\r\n                    }}\r\n                    className=\" text-white p-2 mx-2 border-none hover:cursor-pointer flex-1 btn-view-list\"\r\n                  >\r\n                    {t('view_list').toUpperCase()}{' '}\r\n                  </Link>{' '}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex-1\">\r\n              <DragAndDropGames\r\n                list={list}\r\n                setList={setList}\r\n                setProgress={setProgress}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <ErrorOccured />\r\n      )}\r\n    </PageWrapper>\r\n  )\r\n}\r\n","import { Modal } from 'antd'\r\nimport colors from '../../utils/style/colors'\r\nimport axios from 'axios'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst { confirm } = Modal\r\n\r\nconst PopUpDeleteList = ({ listId, navigate }) => {\r\n  const { t } = useTranslation()\r\n  const deleteList = () => {\r\n    axios\r\n      .delete(`${process.env.REACT_APP_IP_ADRESS}/api/lists/${listId}`, {\r\n        withCredentials: true,\r\n      })\r\n      .then((res) => {\r\n        toast.success(t('list_deleted_with_success'), {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          theme: 'dark',\r\n          autoClose: 1500,\r\n        })\r\n        navigate('/lists')\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n        toast.error(err.message, {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          theme: 'dark',\r\n        })\r\n      })\r\n  }\r\n\r\n  const showDeleteConfirm = () => {\r\n    confirm({\r\n      title: `${t('are_you_sure_to_delete_this_list')} ?`,\r\n      content: (\r\n        <p style={{ fontFamily: 'Inter' }}>\r\n          {t('this_action_is')}{' '}\r\n          <span style={{ color: colors.danger, fontWeight: 500 }}>\r\n            {' '}\r\n            {t('irreversible')}.{' '}\r\n          </span>\r\n        </p>\r\n      ),\r\n      okText: t('yes'),\r\n      okType: 'danger',\r\n      okButtonProps: {\r\n        style: {\r\n          background: colors.danger,\r\n          borderColor: colors.danger,\r\n          color: 'white',\r\n        },\r\n      },\r\n      cancelText: t('no'),\r\n      onOk() {\r\n        deleteList()\r\n      },\r\n    })\r\n  }\r\n\r\n  return (\r\n    <button\r\n      style={{\r\n        color: 'white',\r\n        fontWeight: 700,\r\n      }}\r\n      className=\" text-white p-2 mx-2 border-none hover:cursor-pointer flex-1 btn-delete-list\"\r\n      onClick={showDeleteConfirm}\r\n      type=\"dashed\"\r\n    >\r\n      {t('delete').toUpperCase()}{' '}\r\n    </button>\r\n  )\r\n}\r\nexport default PopUpDeleteList\r\n"],"names":["ListSearchGameToAdd","listId","list","setList","useState","options","setOptions","results","setResults","selectedGame","setSelectedGame","progress","setProgress","searchValue","setSearchValue","t","useTranslation","useEffect","id","games","some","game","id_IGDB","toast","position","theme","autoClose","data","undefined","config","method","url","process","withCredentials","headers","axios","then","res","prevState","gameToAdd","findIndex","catch","err","console","log","message","finally","map","value","slug","label","style","display","justifyContent","className","src","cover","image_id","alt","width","height","name","first_release_date","Date","getFullYear","platforms","platform","abbreviation","join","delayDebounceFn","setTimeout","length","clearTimeout","color","colors","onLoaderFinished","dropdownMatchSelectWidth","onSelect","find","g","notFoundContent","size","placeholder","onChange","e","target","Delete","styled","gameId","placement","title","onConfirm","_id","gameIndex","updatedGames","slice","okText","okButtonProps","backgroundColor","cancelText","toUpperCase","defaultPicture","StyledCard","StyledName","Rank","SortableGame","props","useSortable","attributes","listeners","setNodeRef","transform","transition","CSS","ref","ranked","index","DragAndDropGames","sensors","useSensors","useSensor","MouseSensor","activationConstraint","distance","TouchSensor","delay","tolerance","autoScroll","collisionDetection","closestCenter","onDragEnd","event","active","over","oldIndex","newIndex","newGames","splice","movedGame","rank","items","tags","setTags","inputVisible","setInputVisible","inputValue","setInputValue","editInputIndex","setEditInputIndex","editInputValue","setEditInputValue","inputRef","useRef","editInputRef","current","focus","handleInputConfirm","tag","handleEditInputChange","handleEditInputConfirm","newTags","tagInputStyle","verticalAlign","tagPlusStyle","background","borderStyle","token","colorBorder","fontSize","colorInfoBorderHover","colorPrimaryBorderHover","colorPrimaryHover","fontFamily","wrap","onBlur","onPressEnter","isLongTag","tagElem","closable","userSelect","closeIcon","onClose","removedTag","filter","handleClose","onDoubleClick","preventDefault","type","maxLength","onClick","PlusOutlined","TextArea","Input","PageWrapper","InputName","EditList","useParams","loading","setLoading","error","setError","loginData","useContext","LoginData","setName","isPublic","setIsPublic","isRanked","setIsRanked","description","setDescription","navigate","useNavigate","response","idOwner","public","minWidth","maxWidth","colorBgContainer","colorText","fontWeightStrong","colorTextPlaceholder","showCount","autoSize","minRows","maxRows","defaultValue","colorBgBase","colorPrimary","buttonStyle","updatedList","fontWeight","PopUpDeleteList","to","textAlign","ErrorOccured","confirm","Modal","content","okType","borderColor","onOk"],"sourceRoot":""}